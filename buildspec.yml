version: 0.2

phases:
  pre_build:
    commands:
      - apt-get install wget apt-transport-https gnupg
      - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | apt-key add -
      - echo deb https://aquasecurity.github.io/trivy-repo/deb bionic main | tee -a /etc/apt/sources.list.d/trivy.list
      - apt-get update
      - apt-get install -y trivy
      - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
      - echo trivy version ...
      - echo $TRIVY_VERSION
      - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
      - docker login -u ahmed940 -p A7med@@A7lem@@
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO
      - REPOSITORY_URI=${ECR_REPO}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_NAME:latest .
      - docker tag $IMAGE_NAME:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_NAME:latest $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Scanning ...
      - trivy image --severity HIGH,CRITICAL --exit-code=0 --ignore-unfixed --format template --template "@contrib/html.tpl" -o report.html $REPOSITORY_URI:latest
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $SERVICE_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG  > imagedefinitions.json

artifacts:
  files:
      - imagedefinitions.json
      - report.html